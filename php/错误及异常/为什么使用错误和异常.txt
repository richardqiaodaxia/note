PHP提供了错误处理和日志记录的功能. 这些函数允许你定义自己的错误处理规则，以及修改错误记录的方式. 这样，你就可以根据自己的需要，来更改和加强错误输出信息以满足实际需要

通过日志记录功能，你可以将信息直接发送到其他日志服务器，或者发送到指定的电子邮箱(或者通过邮件网关发送)，或者发送到操作系统日志等，从而可以有选择的记录和监视你的应用程序和网站的最重要的部分。
错误报告功能允许你自定义错误反馈的级别和类型，可以是简单的提示信息或者使用自定义的函数进行处理并返回信息.

为什么要使用错误处理？
1.是网站出错时对用户友好
2.更好的避免错误、调试、修复错误
3.避免一些安全风险
4.更好保证程序的健壮性

一、最简单的错误处理――die()
当我们预计有错误发生时，停止脚步的运行。比如连接数据库时：

(级别E_ERROR、E_USER_ERROR不能被自定义错误处理函数扑捉到)自定义错误函数中不能扑捉到致命错误信息，因为发生致命的运行时错误时脚本都是立即停止执行的。

2.重新抛出异常
有时，当异常被抛出时，您也许希望以不同于标准的方式对它进行处理。可以在一个 “catch” 代码块中再次抛出异常。
脚本应该对用户隐藏系统错误。对程序员来说，系统错误也许很重要，但是用户对它们并不感兴趣。为了让用户更容易使用，您可以再次抛出带有对用户比较友好的消息的异常。
3.异常的规则
1）.需要进行异常处理的代码应该放入 try 代码块内，以便捕获潜在的异常。
2）.每个 try 或 throw 代码块必须至少拥有一个对应的 catch 代码块。
3）.使用多个 catch 代码块可以捕获不同种类的异常。
4）.可以在 try 代码块内的 catch 代码块中再次抛出(re-thrown)异常。
简而言之：如果抛出了异常，就必须捕获它。

